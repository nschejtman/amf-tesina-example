{
  "@graph" : [ {
    "@id" : "./",
    "@type" : [ "document:Unit", "document:Module", "document:Fragment", "document:Document" ],
    "encodes" : "#/web-api",
    "document:root" : true,
    "version" : "3.1.0"
  }, {
    "@id" : "#/declarations/types/Agent",
    "@type" : [ "http://a.ml/vocabularies/shapes#AnyShape", "document:DomainElement", "shacl:NodeShape", "shacl:Shape", "http://a.ml/vocabularies/shapes#Shape" ],
    "description" : "A judiciary agent (person or organization)",
    "shacl:closed" : false,
    "name" : "Agent",
    "property" : [ "#/declarations/types/Agent/property/name", "#/declarations/types/Agent/property/agentType" ]
  }, {
    "@id" : "#/declarations/types/Agent/property/agentType",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/shapes#Shape", "shacl:Shape", "shacl:PropertyShape" ],
    "range" : "#/declarations/types/Agent/property/agentType/scalar/agentType",
    "minCount" : "1",
    "name" : "agentType",
    "path" : "http://a.ml/vocabularies/data#agentType"
  }, {
    "@id" : "#/declarations/types/Agent/property/agentType/scalar/agentType",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/shapes#Shape", "shacl:Shape", "http://a.ml/vocabularies/shapes#AnyShape", "http://a.ml/vocabularies/shapes#ScalarShape" ],
    "description" : "Type of a judiciary agent. Can be 'Person' for a physical judiciary person or 'Organization' for a organization-like agents",
    "datatype" : "xsd:string",
    "in" : "#/declarations/types/Agent/property/agentType/scalar/agentType/list",
    "name" : "agentType"
  }, {
    "@id" : "#/declarations/types/Agent/property/agentType/scalar/agentType/enum/scalar_1",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/data#Node", "http://a.ml/vocabularies/data#Scalar" ],
    "core:name" : "scalar_1",
    "value" : "Person",
    "datatype" : "xsd:string"
  }, {
    "@id" : "#/declarations/types/Agent/property/agentType/scalar/agentType/enum/scalar_2",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/data#Node", "http://a.ml/vocabularies/data#Scalar" ],
    "core:name" : "scalar_2",
    "value" : "Organization",
    "datatype" : "xsd:string"
  }, {
    "@id" : "#/declarations/types/Agent/property/agentType/scalar/agentType/list",
    "@type" : "rdfs:Seq",
    "_1" : "#/declarations/types/Agent/property/agentType/scalar/agentType/enum/scalar_1",
    "_2" : "#/declarations/types/Agent/property/agentType/scalar/agentType/enum/scalar_2"
  }, {
    "@id" : "#/declarations/types/Agent/property/name",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/shapes#Shape", "shacl:Shape", "shacl:PropertyShape" ],
    "range" : "#/declarations/types/Agent/property/name/scalar/name",
    "minCount" : "1",
    "name" : "name",
    "path" : "http://a.ml/vocabularies/data#name"
  }, {
    "@id" : "#/declarations/types/Agent/property/name/scalar/name",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/shapes#Shape", "shacl:Shape", "http://a.ml/vocabularies/shapes#AnyShape", "http://a.ml/vocabularies/shapes#ScalarShape" ],
    "description" : "Name of a judiciary agent",
    "datatype" : "xsd:string",
    "name" : "name"
  }, {
    "@id" : "#/web-api",
    "@type" : [ "document:DomainElement", "document:RootDomainElement", "apiContract:API", "apiContract:WebAPI" ],
    "endpoint" : "#/web-api/end-points/%2Fagents",
    "description" : "API for handling judiciary agents",
    "core:name" : "Agents API",
    "core:version" : "1.0"
  }, {
    "@id" : "#/web-api/end-points/%2Fagents",
    "@type" : [ "document:DomainElement", "apiContract:EndPoint" ],
    "apiContract:path" : "/agents",
    "supportedOperation" : "#/web-api/end-points/%2Fagents/get",
    "description" : "Default endpoint for CRUD operations on agents"
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get",
    "@type" : [ "document:DomainElement", "apiContract:Operation" ],
    "method" : "get",
    "returns" : "#/web-api/end-points/%2Fagents/get/200",
    "description" : "Returns all the known agents"
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get/200",
    "@type" : [ "document:DomainElement", "apiContract:Message", "apiContract:Response" ],
    "payload" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson",
    "statusCode" : "200",
    "description" : "Successfully obtained the list of agents",
    "core:name" : "200"
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson",
    "@type" : [ "document:DomainElement", "apiContract:Payload" ],
    "mediaType" : "application/json",
    "schema" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema"
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/shapes#Shape", "shacl:Shape", "http://a.ml/vocabularies/shapes#AnyShape", "http://a.ml/vocabularies/shapes#ArrayShape" ],
    "examples" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example",
    "description" : "Returns the collection of all registered agents",
    "items" : "#/declarations/types/Agent",
    "name" : "schema"
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example",
    "@type" : [ "document:DomainElement", "apiContract:Example" ],
    "raw" : "-\n  name: Polimi\n  agentType: Organization\n-\n  name: Nicolas\n  agentType: Person",
    "document:strict" : true,
    "structuredValue" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1"
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/data#Node", "rdf:Seq", "http://a.ml/vocabularies/data#Array" ],
    "core:name" : "array_1",
    "member" : [ "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_5", "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2" ]
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/data#Node", "http://a.ml/vocabularies/data#Object" ],
    "core:name" : "object_2",
    "agentType" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/scalar_4",
    "http://a.ml/vocabularies/data#name" : {
      "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/scalar_3"
    }
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/scalar_3",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/data#Node", "http://a.ml/vocabularies/data#Scalar" ],
    "core:name" : "name",
    "value" : "Polimi",
    "datatype" : "xsd:string"
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/scalar_4",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/data#Node", "http://a.ml/vocabularies/data#Scalar" ],
    "core:name" : "agentType",
    "value" : "Organization",
    "datatype" : "xsd:string"
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_5",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/data#Node", "http://a.ml/vocabularies/data#Object" ],
    "core:name" : "object_5",
    "agentType" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_5/scalar_7",
    "http://a.ml/vocabularies/data#name" : {
      "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_5/scalar_6"
    }
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_5/scalar_6",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/data#Node", "http://a.ml/vocabularies/data#Scalar" ],
    "core:name" : "name",
    "value" : "Nicolas",
    "datatype" : "xsd:string"
  }, {
    "@id" : "#/web-api/end-points/%2Fagents/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_5/scalar_7",
    "@type" : [ "document:DomainElement", "http://a.ml/vocabularies/data#Node", "http://a.ml/vocabularies/data#Scalar" ],
    "core:name" : "agentType",
    "value" : "Person",
    "datatype" : "xsd:string"
  } ],
  "@context" : {
    "description" : {
      "@id" : "http://a.ml/vocabularies/core#description"
    },
    "name" : {
      "@id" : "http://www.w3.org/ns/shacl#name"
    },
    "datatype" : {
      "@id" : "http://www.w3.org/ns/shacl#datatype",
      "@type" : "@id"
    },
    "examples" : {
      "@id" : "http://a.ml/vocabularies/apiContract#examples",
      "@type" : "@id"
    },
    "items" : {
      "@id" : "http://a.ml/vocabularies/shapes#items",
      "@type" : "@id"
    },
    "value" : {
      "@id" : "http://a.ml/vocabularies/data#value"
    },
    "minCount" : {
      "@id" : "http://www.w3.org/ns/shacl#minCount",
      "@type" : "http://www.w3.org/2001/XMLSchema#long"
    },
    "range" : {
      "@id" : "http://a.ml/vocabularies/shapes#range",
      "@type" : "@id"
    },
    "path" : {
      "@id" : "http://www.w3.org/ns/shacl#path",
      "@type" : "@id"
    },
    "_2" : {
      "@id" : "http://www.w3.org/2000/01/rdf-schema#_2",
      "@type" : "@id"
    },
    "_1" : {
      "@id" : "http://www.w3.org/2000/01/rdf-schema#_1",
      "@type" : "@id"
    },
    "payload" : {
      "@id" : "http://a.ml/vocabularies/apiContract#payload",
      "@type" : "@id"
    },
    "statusCode" : {
      "@id" : "http://a.ml/vocabularies/apiContract#statusCode"
    },
    "in" : {
      "@id" : "http://www.w3.org/ns/shacl#in",
      "@type" : "@id"
    },
    "agentType" : {
      "@id" : "http://a.ml/vocabularies/data#agentType",
      "@type" : "@id"
    },
    "member" : {
      "@id" : "http://www.w3.org/2000/01/rdf-schema#member",
      "@type" : "@id"
    },
    "supportedOperation" : {
      "@id" : "http://a.ml/vocabularies/apiContract#supportedOperation",
      "@type" : "@id"
    },
    "root" : {
      "@id" : "http://a.ml/vocabularies/document#root",
      "@type" : "http://www.w3.org/2001/XMLSchema#boolean"
    },
    "version" : {
      "@id" : "http://a.ml/vocabularies/document#version"
    },
    "encodes" : {
      "@id" : "http://a.ml/vocabularies/document#encodes",
      "@type" : "@id"
    },
    "returns" : {
      "@id" : "http://a.ml/vocabularies/apiContract#returns",
      "@type" : "@id"
    },
    "method" : {
      "@id" : "http://a.ml/vocabularies/apiContract#method"
    },
    "endpoint" : {
      "@id" : "http://a.ml/vocabularies/apiContract#endpoint",
      "@type" : "@id"
    },
    "property" : {
      "@id" : "http://www.w3.org/ns/shacl#property",
      "@type" : "@id"
    },
    "closed" : {
      "@id" : "http://www.w3.org/ns/shacl#closed",
      "@type" : "http://www.w3.org/2001/XMLSchema#boolean"
    },
    "raw" : {
      "@id" : "http://a.ml/vocabularies/document#raw"
    },
    "structuredValue" : {
      "@id" : "http://a.ml/vocabularies/document#structuredValue",
      "@type" : "@id"
    },
    "strict" : {
      "@id" : "http://a.ml/vocabularies/document#strict",
      "@type" : "http://www.w3.org/2001/XMLSchema#boolean"
    },
    "schema" : {
      "@id" : "http://a.ml/vocabularies/shapes#schema",
      "@type" : "@id"
    },
    "mediaType" : {
      "@id" : "http://a.ml/vocabularies/core#mediaType"
    },
    "shacl" : "http://www.w3.org/ns/shacl#",
    "core" : "http://a.ml/vocabularies/core#",
    "rdf" : "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "owl" : "http://www.w3.org/2002/07/owl#",
    "apiContract" : "http://a.ml/vocabularies/apiContract#",
    "meta" : "http://a.ml/vocabularies/meta#",
    "document" : "http://a.ml/vocabularies/document#",
    "xsd" : "http://www.w3.org/2001/XMLSchema#",
    "rdfs" : "http://www.w3.org/2000/01/rdf-schema#"
  }
}